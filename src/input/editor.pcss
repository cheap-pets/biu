$inputIconSize: calc($inputHeightPx - 2);

.mu-editor {
  position: relative;
  display: inline-block;
  width: 200px;

  &:hover > .mu-input {
    border-color: $inputHoverBorderColor;
  }

  &[disabled] > .mu-input,
  & > .mu-input[disabled] {
    border-color: $inputBorderColor;
  }

  & > .mu-input {
    width: 100%;
    vertical-align: middle;
    padding-right: $(inputIconSize)px;
  }

  &[buttons="0"] > .mu-input {
    padding-right: $(inputXPaddingPx)px;
  }

  &[buttons="2"] {
    & > input {
      padding-right: calc($inputIconSize * 2)px;
      & + .mu-editor-icon {
        right: $(inputIconSize)px;
      }
    }
    & > .mu-editor-icon:first-child {
      & + .mu-editor-icon {
        left: $(inputIconSize)px;
        right: auto;
      }
      & ~ input {
        padding-left: calc($inputIconSize * 2)px;
        padding-right: $(inputXPaddingPx)px;
      }
      & + input {
        padding-left: $(inputIconSize)px;
        padding-right: $(inputIconSize)px;
        & + .mu-editor-icon {
          right: 1px;
        }
      }
    }
  }

  &[disabled],
  &[readonly] {
    & > .mu-input {
      padding-left: $(inputXPaddingPx)px;
      padding-right: $(inputXPaddingPx)px;
    }
    & > .mu-editor-icon {
      display: none;
    }
  }
}

.mu-icon.mu-editor-icon {
  position: absolute;
  z-index: 3;
  top: 1px;
  bottom: 1px;
  right: 1px;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  width: $(inputIconSize)px;
  color: $inputIconColor;
  fill: $inputIconColor;

  &:first-child {
    left: 1px;
    right: auto;

    & + input {
      padding-left: $(inputIconSize)px;
      padding-right: $(inputXPaddingPx)px;
    }
  }

  &[clickable] {
    cursor: pointer;
    &:hover {
      fill: $buttonPrimaryHoverColor;
      color: $buttonPrimaryHoverColor;
    }
  }
  &[trigger-type="cancel"] {
    color: $textQuarterDark;
    fill: $textQuarterDark;
    &:hover {
      color: $textHalfDark;
      fill: $textHalfDark;
    }
  }
}

.mu-editor[invalid],
[invalid] .mu-editor {
  & > .mu-input {
    border-color: $inputInvalidBorderColor;
  }
  & > [clickable]:hover {
    color: $inputInvalidBorderColor;
    fill: $inputInvalidBorderColor;
  }
}
