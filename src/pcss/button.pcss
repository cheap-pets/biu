.mu-button {
  position: relative;
  display: inline-block;
  height: $inputElementHeight;
  padding: $inputElementPadding;
  outline: none;
  border: 1px solid $normalBorderColor;
  border-radius: $inputElementBorderRadius;
  line-height: $normalLineHeight;
  background: $normalBackground;
  text-decoration: none;
  text-align: center;
  font-size: $buttonFontSize;
  color: $normalButtonTextColor;
  fill: $normalButtonTextColor;
  cursor: pointer;
  box-shadow: $buttonShadow $normalGreyBackground;

  &::before {
    display: inline-block;
    float: left;
    width: 0;
    content: '\00a0';
  }

  &[button-style="link"] {
    padding-left: 0;
    padding-right: 0;
    box-shadow: none !important;
  }

  &[active] {
    border-color: $primaryPlusColor;
    background: $primaryTinyColor;
    box-shadow: $buttonActiveShadow $primaryShadowColor;
    color: $primaryPlusColor;
    fill: $primaryPlusColor;
  }

  &:hover,
  &[button-style="text"]:hover {
    border-color: $primaryMinusColor;
    color: $primaryMinusColor;
    fill: $primaryMinusColor;
    box-shadow: $buttonHoverShadow $primaryShadowColor;
  }

  &[button-type="primary"] {
    color: $normalHighlightTextColor;
    fill: $normalHighlightTextColor;
    box-shadow: $buttonShadow $primaryShadowColor;

    @if $buttonGradient {
      border-color: $primaryMinusColor;
      background: linear-gradient(to bottom, $primaryMinusColor, $primaryPlusColor);;
    }
    @else {
      border-color: $primaryColor;
      background: $primaryColor;
    }

    &[active] {
      background: $primaryPlusColor;
      border-color: $primaryPlusColor;
      box-shadow: $buttonActiveShadow $primaryShadowColor;
    }

    &:hover {
      background: $primaryMinusColor;
      border-color: $primaryMinusColor;
      box-shadow: $buttonHoverShadow $primaryShadowColor;
      color: $normalHighlightTextColor;
      fill: $normalHighlightTextColor;
    }

    &[button-style="link"],
    &[button-style="text"],
    &[button-style="outline"] {
      color: $primaryColor;
      fill: $primaryColor;

      &[active] {
        color: $primaryPlusColor;
        fill: $primaryPlusColor;
        background: $primaryTinyColor;
      }

      &:hover {
        color: $primaryMinusColor;
        fill: $primaryMinusColor;
      }
    }
  }

  &[button-type="submit"] {
    color: $normalHighlightTextColor;
    fill: $normalHighlightTextColor;
    box-shadow: $buttonShadow $successShadowColor;

    @if $buttonGradient {
      border-color: $successMinusColor;
      background: linear-gradient(to bottom, $successMinusColor, $successPlusColor);
    }
    @else {
      border-color: $successColor;
      background: $successColor;
    }

    &[active] {
      background: $successPlusColor;
      border-color: $successPlusColor;
      box-shadow: $buttonActiveShadow $successShadowColor;
    }

    &:hover {
      background: $successMinusColor;
      border-color: $successMinusColor;
      box-shadow: $buttonHoverShadow $successShadowColor;
      color: $normalHighlightTextColor;
      fill: $normalHighlightTextColor;
    }

    &[button-style="link"],
    &[button-style="text"],
    &[button-style="outline"] {
      color: $successColor;
      fill: $successColor;

      &[active] {
        color: $successPlusColor;
        fill: $successPlusColor;
        background: $successTinyColor;
      }

      &:hover {
        color: $successMinusColor;
        fill: $successMinusColor;
      }
    }
  }

  &[button-type="danger"] {
    color: $normalHighlightTextColor;
    fill: $normalHighlightTextColor;
    box-shadow: $buttonShadow $dangerShadowColor;

    @if $buttonGradient {
      border-color: $dangerMinusColor;
      background: linear-gradient(to bottom, $dangerMinusColor, $dangerPlusColor);;
    }
    @else {
      border-color: $dangerColor;
      background: $dangerColor;
    }

    &[active] {
      background: $dangerPlusColor;
      border-color: $dangerPlusColor;
      box-shadow: $buttonActiveShadow $dangerShadowColor;
    }

    &:hover {
      background: $dangerMinusColor;
      border-color: $dangerMinusColor;
      box-shadow: $buttonHoverShadow $dangerShadowColor;
      color: $normalHighlightTextColor;
      fill: $normalHighlightTextColor;
    }

    &[button-style="link"],
    &[button-style="text"],
    &[button-style="outline"] {
      color: $dangerColor;
      fill: $dangerColor;

      &[active] {
        color: $dangerPlusColor;
        fill: $dangerPlusColor;
        background: $dangerTinyColor;
      }

      &:hover {
        color: $dangerMinusColor;
        fill: $dangerMinusColor;
      }
    }
  }

  &[button-style="text"] {
    box-shadow: none;
    border-color: transparent;
  }

  &[button-style="link"] {
    background: transparent !important;
    border-color: transparent !important;
  }

  &[button-style="text"],
  &[button-style="outline"] {
    background: transparent;

    &[active],
    &:hover {
      background: transparent;
    }
  }

  &[disabled] {
    color: $normalDisabledTextColor !important;
    fill: $normalDisabledTextColor !important;
    box-shadow: none !important;
    cursor: default;

    &:not([button-style="link"]) {
      border-color: $normalDisabledBackground !important;
      background: $normalDisabledBackground !important;
    }
  }

  &[icon-only],
  &:empty {
    width: $inputElementHeight;
    padding-left: 0;
    padding-right: 0;
  }

  & > .mu-icon + span,
  & > span + .mu-icon {
    margin-left: 4px;
  }
}

button.mu-button {
  padding-top: 0;
  padding-bottom: 0;
}

[button-shape="round"],
[button-shape="round"] > .mu-button {
  border-radius: $inputElementRoundRadius;
}

.mu-button-like {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  user-select: none;
  cursor: pointer;

  &:hover {
    color: $primaryColor;
    fill: $primaryColor;
    background: $normalHoverBackground;
  }
  &[active] {
    color: $normalHighlightTextColor;
    fill: $normalHighlightTextColor;
    background: $primaryColor;
  }
}
