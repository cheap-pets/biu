.mu-button {
  position: relative;
  display: inline-block;
  height: $inputElementHeight;
  padding: $inputElementPadding;
  outline: none;
  border: 1px solid $normalBorderColor;
  border-radius: $inputElementBorderRadius;
  line-height: $normalLineHeight;
  background: $normalBackground;
  text-decoration: none;
  text-align: center;
  font-size: $buttonFontSize;
  color: $normalTextColor;
  fill: $normalTextColor;
  cursor: pointer;

  &::before {
    display: inline-block;
    width: 0;
    content: '\00a0';
  }

  &[button-style="link"] {
    padding-left: 0;
    padding-right: 0;
  }

  &:not([button-type]),
  &[button-type="normal"] {
    box-shadow: $buttonShadow $normalGreyBackground;

    &[button-style="link"] {
      &:hover {
        color: $primaryMinusColor;
        fill: $primaryMinusColor;
      }
    }

    &[active] {
      background: $normalDarkGreyBackground;
      box-shadow: $buttonActiveShadow $normalGreyBackground;
      color: $normalHighlightTextColor;
      fill: $normalHighlightTextColor;
    }

    &:hover {
      background: $normalBackground;
      box-shadow: $buttonHoverShadow $normalShadowColor;
      color: $primaryColor;
      fill: $primaryColor;
    }
  }
  
  &[button-style="text"] {
    box-shadow: none;
    
    &:hover {
      border-color: $normalBorderColor;
    }
  }

  &[button-style="link"],
  &[disabled] {
    box-shadow: none !important;
  }

  &[button-type="primary"] {
    color: $normalHighlightTextColor;
    fill: $normalHighlightTextColor;
    box-shadow: $buttonShadow $primaryTinyColor;

    @if $buttonGradient {
      border-color: $primaryMinusColor;
      background: linear-gradient(to bottom, $primaryMinusColor, $primaryPlusColor);;
    }
    @else {
      border-color: $primaryColor;
      background: $primaryColor;
    }

    &[button-style="link"] {
      color: $primaryColor;
      fill: $primaryColor;
      &:hover {
        color: $primaryMinusColor;
        fill: $primaryMinusColor;
      }
    }

    &[button-style="text"],
    &[button-style="outline"] {
      color: $primaryColor;
      fill: $primaryColor;
    }

    &[active] {
      background: $primaryPlusColor;
      border-color: $primaryPlusColor;
      box-shadow: $buttonActiveShadow $primaryTinyColor;
    }

    &:hover {
      background: $primaryMinusColor;
      border-color: $primaryMinusColor;
      box-shadow: $buttonHoverShadow $primaryTinyColor;
      color: $normalHighlightTextColor;
      fill: $normalHighlightTextColor;
    }
  }

  &[button-type="submit"] {
    color: $normalHighlightTextColor;
    fill: $normalHighlightTextColor;
    box-shadow: $buttonShadow $successTinyColor;

    @if $buttonGradient {
      border-color: $successMinusColor;
      background: linear-gradient(to bottom, $successMinusColor, $successPlusColor);;
    }
    @else {
      border-color: $successColor;
      background: $successColor;
    }

    &[button-style="link"] {
      color: $successColor;
      fill: $successColor;
      &:hover {
        color: $successMinusColor;
        fill: $successMinusColor;
      }
    }

    &[button-style="text"],
    &[button-style="outline"] {
      color: $successColor;
      fill: $successColor;
    }

    &[active] {
      background: $successPlusColor;
      border-color: $successPlusColor;
      box-shadow: $buttonActiveShadow $successTinyColor;
    }

    &:hover {
      background: $successMinusColor;
      border-color: $successMinusColor;
      box-shadow: $buttonHoverShadow $successTinyColor;
      color: $normalHighlightTextColor;
      fill: $normalHighlightTextColor;
    }
  }

  &[button-type="danger"] {
    color: $normalHighlightTextColor;
    fill: $normalHighlightTextColor;
    box-shadow: $buttonShadow $dangerTinyColor;

    @if $buttonGradient {
      border-color: $dangerMinusColor;
      background: linear-gradient(to bottom, $dangerMinusColor, $dangerPlusColor);;
    }
    @else {
      border-color: $dangerColor;
      background: $dangerColor;
    }

    &[button-style="link"] {
      color: $dangerColor;
      fill: $dangerColor;
      &:hover {
        color: $dangerMinusColor;
        fill: $dangerMinusColor;
      }
    }

    &[button-style="text"],
    &[button-style="outline"] {
      color: $dangerColor;
      fill: $dangerColor;
    }

    &[active] {
      background: $dangerPlusColor;
      border-color: $dangerPlusColor;
      box-shadow: $buttonActiveShadow $dangerTinyColor;
    }

    &:hover {
      background: $dangerMinusColor;
      border-color: $dangerMinusColor;
      box-shadow: $buttonHoverShadow $dangerTinyColor;
      color: $normalHighlightTextColor;
      fill: $normalHighlightTextColor;
    }
  }

  &[button-style="link"],
  &[button-style="link"]:hover,
  &[button-style="link"][active],
  &[button-style="text"] {
    border-color: transparent;
    background: transparent;
    box-shadow: none;
  }
  &[button-style="outline"] {
    background: $normalBackground;
  }

  &[disabled] {
    color: $normalDisabledTextColor !important;
    fill: $normalDisabledTextColor !important;
    cursor: default;

    &:not([button-style="link"]) {
      border-color: $normalDisabledBackground !important;
      background: $normalDisabledBackground !important;
    }
  }

  &[icon-only],
  &:empty {
    width: $inputElementHeight;
    padding-left: 0;
    padding-right: 0;
  }
}

button.mu-button {
  padding-top: 0;
  padding-bottom: 0;
}

[button-shape="round"],
[button-shape="round"] > .mu-button {
  border-radius: $inputElementRoundRadius;
}

.mu-button-like {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  user-select: none;
  cursor: pointer;

  &:hover {
    color: $primaryColor;
    fill: $primaryColor;
    background: $normalHoverBackground;
  }
  &[active] {
    color: $normalHighlightTextColor;
    fill: $normalHighlightTextColor;
    background: $primaryColor;
  }
}
